import ctypes

buf = [0x000000D7, 0x000000CC, 0x000000DD, 0x000000CF, 0x000000E4, 0x000000BD, 0x000000D1, 0x0000009D, 0x000000DD, 0x000000DC, 0x000000C8, 0x000000D1, 0x000000CE, 0x0000009A, 0x0000009A, 0x000000C8, 0x000000D5, 0x00000099, 0x000000DD, 0x000000C8, 0x00000099, 0x000000CF, 0x000000C8, 0x000000E0, 0x00000099, 0x000000DB, 0x000000D4, 0x000000C8, 0x000000E0, 0x0000009D, 0x000000DC, 0x000000C8, 0x000000D2, 0x000000DD, 0x000000A8, 0x000000E6, 0x000000D1, 0x000000E2, 0x000000D4, 0x000000E9, 0x000000C2, 0x000000D6, 0x000000A2, 0x000000E2, 0x000000E1, 0x000000CD, 0x000000D6, 0x000000D3, 0x0000009F, 0x0000009F, 0x000000CD, 0x000000DA, 0x0000009E, 0x000000E2, 0x000000CD, 0x0000009E, 0x000000D4, 0x000000CD, 0x000000E5, 0x0000009E, 0x000000E0, 0x000000D9, 0x000000CD, 0x000000E5, 0x000000A2, 0x000000E1, 0x000000CD, 0x000000D7, 0x000000E2, 0x000000AD, 0x000000EB, 0x000000D7, 0x000000C9, 0x000000DE, 0x000000B7, 0x000000CB, 0x00000097, 0x000000D7, 0x000000D6, 0x000000C2, 0x000000CB, 0x000000C8, 0x00000094, 0x00000094, 0x000000C2, 0x000000CF, 0x00000093, 0x000000D7, 0x000000C2, 0x00000093, 0x000000C9, 0x000000C2, 0x000000DA, 0x00000093, 0x000000D5, 0x000000CE, 0x000000C2, 0x000000DA, 0x00000097, 0x000000D6, 0x000000C2, 0x000000CC, 0x000000D7, 0x000000A2, 0x000000E0, 0x000000DA, 0x000000EF, 0x000000C8, 0x000000DC, 0x000000A8, 0x000000E8, 0x000000E7, 0x000000D3, 0x000000DC, 0x000000D9, 0x000000A5, 0x000000A5, 0x000000D3, 0x000000E0, 0x000000A4, 0x000000E8, 0x000000D3, 0x000000A4, 0x000000DA, 0x000000D3, 0x000000EB, 0x000000A4, 0x000000E6, 0x000000DF, 0x000000D3, 0x000000EB, 0x000000A8, 0x000000E7, 0x000000D3, 0x000000DD, 0x000000E8, 0x000000B3, 0x000000F1, 0x000000E1, 0x000000BA, 0x000000CE, 0x0000009A, 0x000000DA, 0x000000D9, 0x000000C5, 0x000000CE, 0x000000CB, 0x00000097, 0x00000097, 0x000000C5, 0x000000D2, 0x00000096, 0x000000DA, 0x000000C5, 0x00000096, 0x000000CC, 0x000000C5, 0x000000DD, 0x00000096, 0x000000D8, 0x000000D1, 0x000000C5, 0x000000DD, 0x0000009A, 0x000000D9, 0x000000C5, 0x000000CF, 0x000000DA, 0x000000A5, 0x000000E3, 0x000000CF, 0x000000E3, 0x000000AF, 0x000000EF, 0x000000EE, 0x000000DA, 0x000000E3, 0x000000E0, 0x000000AC, 0x000000AC, 0x000000DA, 0x000000E7, 0x000000AB, 0x000000EF, 0x000000DA, 0x000000AB, 0x000000E1, 0x000000DA, 0x000000F2, 0x000000AB, 0x000000ED, 0x000000E6, 0x000000DA, 0x000000F2, 0x000000AF, 0x000000EE, 0x000000DA, 0x000000E4, 0x000000EF, 0x000000BA, 0x000000F8, 0x000000BC, 0x00000088, 0x000000C8, 0x000000C7, 0x000000B3, 0x000000BC, 0x000000B9, 0x00000085, 0x00000085, 0x000000B3, 0x000000C0, 0x00000084, 0x000000C8, 0x000000B3, 0x00000084, 0x000000BA, 0x000000B3, 0x000000CB, 0x00000084, 0x000000C6, 0x000000BF, 0x000000B3, 0x000000CB, 0x00000088, 0x000000C7, 0x000000B3, 0x000000BD, 0x000000C8, 0x00000093, 0x000000D1, 0x0000009C, 0x000000DC, 0x000000DB, 0x000000C7, 0x000000D0, 0x000000CD, 0x00000099, 0x00000099, 0x000000C7, 0x000000D4, 0x00000098, 0x000000DC, 0x000000C7, 0x00000098, 0x000000CE, 0x000000C7, 0x000000DF, 0x00000098, 0x000000DA, 0x000000D3, 0x000000C7, 0x000000DF, 0x0000009C, 0x000000DB, 0x000000C7, 0x000000D1, 0x000000DC, 0x000000A7, 0x000000E5, 0x000000A8, 0x000000A7, 0x00000093, 0x0000009C, 0x00000099, 0x00000065, 0x00000065, 0x00000093, 0x000000A0, 0x00000064, 0x000000A8, 0x00000093, 0x00000064, 0x0000009A, 0x00000093, 0x000000AB, 0x00000064, 0x000000A6, 0x0000009F, 0x00000093, 0x000000AB, 0x00000068, 0x000000A7, 0x00000093, 0x0000009D, 0x000000A8, 0x00000073, 0x000000B1, 0x000000E7, 0x000000D3, 0x000000DC, 0x000000D9, 0x000000A5, 0x000000A5, 0x000000D3, 0x000000E0, 0x000000A4, 0x000000E8, 0x000000D3, 0x000000A4, 0x000000DA, 0x000000D3, 0x000000EB, 0x000000A4, 0x000000E6, 0x000000DF, 0x000000D3, 0x000000EB, 0x000000A8, 0x000000E7, 0x000000D3, 0x000000DD, 0x000000E8, 0x000000B3, 0x000000F1, 0x000000D2, 0x000000DB, 0x000000D8, 0x000000A4, 0x000000A4, 0x000000D2, 0x000000DF, 0x000000A3, 0x000000E7, 0x000000D2, 0x000000A3, 0x000000D9, 0x000000D2, 0x000000EA, 0x000000A3, 0x000000E5, 0x000000DE, 0x000000D2, 0x000000EA, 0x000000A7, 0x000000E6, 0x000000D2, 0x000000DC, 0x000000E7, 0x000000B2, 0x000000F0, 0x000000C7, 0x000000C4, 0x00000090, 0x00000090, 0x000000BE, 0x000000CB, 0x0000008F, 0x000000D3, 0x000000BE, 0x0000008F, 0x000000C5, 0x000000BE, 0x000000D6, 0x0000008F, 0x000000D1, 0x000000CA, 0x000000BE, 0x000000D6, 0x00000093, 0x000000D2, 0x000000BE, 0x000000C8, 0x000000D3, 0x0000009E, 0x000000DC, 0x000000CD, 0x00000099, 0x00000099, 0x000000C7, 0x000000D4, 0x00000098, 0x000000DC, 0x000000C7, 0x00000098, 0x000000CE, 0x000000C7, 0x000000DF, 0x00000098, 0x000000DA, 0x000000D3, 0x000000C7, 0x000000DF, 0x0000009C, 0x000000DB, 0x000000C7, 0x000000D1, 0x000000DC, 0x000000A7, 0x000000E5, 0x00000096, 0x00000096, 0x000000C4, 0x000000D1, 0x00000095, 0x000000D9, 0x000000C4, 0x00000095, 0x000000CB, 0x000000C4, 0x000000DC, 0x00000095, 0x000000D7, 0x000000D0, 0x000000C4, 0x000000DC, 0x00000099, 0x000000D8, 0x000000C4, 0x000000CE, 0x000000D9, 0x000000A4, 0x000000E2, 0x00000062, 0x00000090, 0x0000009D, 0x00000061, 0x000000A5, 0x00000090, 0x00000061, 0x00000097, 0x00000090, 0x000000A8, 0x00000061, 0x000000A3, 0x0000009C, 0x00000090, 0x000000A8, 0x00000065, 0x000000A4, 0x00000090, 0x0000009A, 0x000000A5, 0x00000070, 0x000000AE, 0x00000090, 0x0000009D, 0x00000061, 0x000000A5, 0x00000090, 0x00000061, 0x00000097, 0x00000090, 0x000000A8, 0x00000061, 0x000000A3, 0x0000009C, 0x00000090, 0x000000A8, 0x00000065, 0x000000A4, 0x00000090, 0x0000009A, 0x000000A5, 0x00000070, 0x000000AE, 0x000000CB, 0x0000008F, 0x000000D3, 0x000000BE, 0x0000008F, 0x000000C5, 0x000000BE, 0x000000D6, 0x0000008F, 0x000000D1, 0x000000CA, 0x000000BE, 0x000000D6, 0x00000093, 0x000000D2, 0x000000BE, 0x000000C8, 0x000000D3, 0x0000009E, 0x000000DC, 0x0000009C, 0x000000E0, 0x000000CB, 0x0000009C, 0x000000D2, 0x000000CB, 0x000000E3, 0x0000009C, 0x000000DE, 0x000000D7, 0x000000CB, 0x000000E3, 0x000000A0, 0x000000DF, 0x000000CB, 0x000000D5, 0x000000E0, 0x000000AB, 0x000000E9, 0x000000A4, 0x0000008F, 0x00000060, 0x00000096, 0x0000008F, 0x000000A7, 0x00000060, 0x000000A2, 0x0000009B, 0x0000008F, 0x000000A7, 0x00000064, 0x000000A3, 0x0000008F, 0x00000099, 0x000000A4, 0x0000006F, 0x000000AD, 0x000000D3, 0x000000A4, 0x000000DA, 0x000000D3, 0x000000EB, 0x000000A4, 0x000000E6, 0x000000DF, 0x000000D3, 0x000000EB, 0x000000A8, 0x000000E7, 0x000000D3, 0x000000DD, 0x000000E8, 0x000000B3, 0x000000F1, 0x0000008F, 0x000000C5, 0x000000BE, 0x000000D6, 0x0000008F, 0x000000D1, 0x000000CA, 0x000000BE, 0x000000D6, 0x00000093, 0x000000D2, 0x000000BE, 0x000000C8, 0x000000D3, 0x0000009E, 0x000000DC, 0x00000096, 0x0000008F, 0x000000A7, 0x00000060, 0x000000A2, 0x0000009B, 0x0000008F, 0x000000A7, 0x00000064, 0x000000A3, 0x0000008F, 0x00000099, 0x000000A4, 0x0000006F, 0x000000AD, 0x000000C5, 0x000000DD, 0x00000096, 0x000000D8, 0x000000D1, 0x000000C5, 0x000000DD, 0x0000009A, 0x000000D9, 0x000000C5, 0x000000CF, 0x000000DA, 0x000000A5, 0x000000E3, 0x000000D6, 0x0000008F, 0x000000D1, 0x000000CA, 0x000000BE, 0x000000D6, 0x00000093, 0x000000D2, 0x000000BE, 0x000000C8, 0x000000D3, 0x0000009E, 0x000000DC, 0x000000A7, 0x000000E9, 0x000000E2, 0x000000D6, 0x000000EE, 0x000000AB, 0x000000EA, 0x000000D6, 0x000000E0, 0x000000EB, 0x000000B6, 0x000000F4, 0x000000A2, 0x0000009B, 0x0000008F, 0x000000A7, 0x00000064, 0x000000A3, 0x0000008F, 0x00000099, 0x000000A4, 0x0000006F, 0x000000AD, 0x000000DD, 0x000000D1, 0x000000E9, 0x000000A6, 0x000000E5, 0x000000D1, 0x000000DB, 0x000000E6, 0x000000B1, 0x000000EF, 0x000000CA, 0x000000E2, 0x0000009F, 0x000000DE, 0x000000CA, 0x000000D4, 0x000000DF, 0x000000AA, 0x000000E8, 0x000000D6, 0x00000093, 0x000000D2, 0x000000BE, 0x000000C8, 0x000000D3, 0x0000009E, 0x000000DC, 0x000000AB, 0x000000EA, 0x000000D6, 0x000000E0, 0x000000EB, 0x000000B6, 0x000000F4, 0x000000A7, 0x00000093, 0x0000009D, 0x000000A8, 0x00000073, 0x000000B1, 0x000000D2, 0x000000DC, 0x000000E7, 0x000000B2, 0x000000F0, 0x000000C8, 0x000000D3, 0x0000009E, 0x000000DC, 0x000000DD, 0x000000A8, 0x000000E6, 0x000000B3, 0x000000F1, 0x000000BC]

sum = 0
for i in buf:
    sum = ctypes.c_int32(i + sum).value 

assert sum == 126144

'''
buf[0]  = ipt[1]  + ipt[0] 
buf[1]  = ipt[2]  + ipt[0]
buf[2]  = ipt[3]  + ipt[0]
...
buf[35] = ipt[36] + ipt[0]
-------------------------
buf[36] = ipt[2]  + ipt[1]
buf[37] = ipt[3]  + ipt[1]
...
buf[71] = ipt[37] + ipt[1]
'''
# print(buf[1], buf[36] - buf[0])
'''
ipt[2] + ipt[0]= buf[1] = 204 
ipt[2] - ipt[0] = buf[36] - buf[0] = -6

ipt[0] = 105 = 'i'
ipt[2] = 99 = 'c'
'''
flag = ['i']
for i in xrange(1, 37):
    flag.append(chr(buf[i - 1] - 105))
print(''.join(flag))
